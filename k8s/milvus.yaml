# Milvus Vector Database Components
# etcd for Milvus
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
  namespace: kpc-system
  labels:
    app: etcd
    component: vector-db-etcd
spec:
  serviceName: etcd
  replicas: 1
  selector:
    matchLabels:
      app: etcd
  template:
    metadata:
      labels:
        app: etcd
        component: vector-db-etcd
    spec:
      containers:
      - name: etcd
        image: quay.io/coreos/etcd:v3.5.5
        ports:
        - containerPort: 2379
          name: client
        - containerPort: 2380
          name: peer
        env:
        - name: ETCD_AUTO_COMPACTION_MODE
          value: "revision"
        - name: ETCD_AUTO_COMPACTION_RETENTION
          value: "1000"
        - name: ETCD_QUOTA_BACKEND_BYTES
          value: "4294967296"
        - name: ETCD_SNAPSHOT_COUNT
          value: "50000"
        command:
        - etcd
        - -advertise-client-urls=http://127.0.0.1:2379
        - -listen-client-urls=http://0.0.0.0:2379
        - --data-dir=/etcd
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - etcdctl
            - endpoint
            - health
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 20
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - etcdctl
            - endpoint
            - health
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
        volumeMounts:
        - name: etcd-data
          mountPath: /etcd
  volumeClaimTemplates:
  - metadata:
      name: etcd-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: etcd
  namespace: kpc-system
  labels:
    app: etcd
    component: vector-db-etcd
spec:
  type: ClusterIP
  ports:
  - port: 2379
    targetPort: 2379
    protocol: TCP
    name: client
  - port: 2380
    targetPort: 2380
    protocol: TCP
    name: peer
  selector:
    app: etcd

---
# MinIO for Milvus
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: kpc-system
  labels:
    app: minio
    component: vector-db-storage
spec:
  serviceName: minio
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
        component: vector-db-storage
    spec:
      containers:
      - name: minio
        image: minio/minio:RELEASE.2023-03-20T20-16-18Z
        ports:
        - containerPort: 9000
          name: api
        - containerPort: 9001
          name: console
        env:
        - name: MINIO_ACCESS_KEY
          value: "minioadmin"
        - name: MINIO_SECRET_KEY
          value: "minioadmin"
        command:
        - minio
        - server
        - /minio_data
        - --console-address
        - ":9001"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 20
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
        volumeMounts:
        - name: minio-data
          mountPath: /minio_data
  volumeClaimTemplates:
  - metadata:
      name: minio-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 50Gi

---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: kpc-system
  labels:
    app: minio
    component: vector-db-storage
spec:
  type: ClusterIP
  ports:
  - port: 9000
    targetPort: 9000
    protocol: TCP
    name: api
  - port: 9001
    targetPort: 9001
    protocol: TCP
    name: console
  selector:
    app: minio

---
# Milvus Standalone
apiVersion: apps/v1
kind: Deployment
metadata:
  name: milvus-standalone
  namespace: kpc-system
  labels:
    app: milvus-standalone
    component: vector-database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: milvus-standalone
  template:
    metadata:
      labels:
        app: milvus-standalone
        component: vector-database
    spec:
      containers:
      - name: milvus
        image: milvusdb/milvus:v2.3.2
        command: ["milvus", "run", "standalone"]
        ports:
        - containerPort: 19530
          name: grpc
        - containerPort: 9091
          name: metrics
        env:
        - name: ETCD_ENDPOINTS
          value: "etcd:2379"
        - name: MINIO_ADDRESS
          value: "minio:9000"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9091
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 20
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 9091
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
        volumeMounts:
        - name: milvus-data
          mountPath: /var/lib/milvus
      volumes:
      - name: milvus-data
        persistentVolumeClaim:
          claimName: milvus-pvc
      initContainers:
      - name: wait-for-etcd
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z etcd 2379; do echo waiting for etcd; sleep 2; done;']
      - name: wait-for-minio
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z minio 9000; do echo waiting for minio; sleep 2; done;']

---
apiVersion: v1
kind: Service
metadata:
  name: milvus-standalone
  namespace: kpc-system
  labels:
    app: milvus-standalone
    component: vector-database
spec:
  type: ClusterIP
  ports:
  - port: 19530
    targetPort: 19530
    protocol: TCP
    name: grpc
  - port: 9091
    targetPort: 9091
    protocol: TCP
    name: metrics
  selector:
    app: milvus-standalone

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: milvus-pvc
  namespace: kpc-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi