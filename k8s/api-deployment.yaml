apiVersion: apps/v1
kind: Deployment
metadata:
  name: kpc-api
  namespace: kpc-system
  labels:
    app: kpc-api
    component: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: kpc-api
  template:
    metadata:
      labels:
        app: kpc-api
        component: backend
    spec:
      containers:
      - name: kpc-api
        image: kpc/api:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: kpc-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: kpc-config
              key: PORT
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: kpc-config
              key: DATABASE_URL
        - name: NEO4J_URI
          valueFrom:
            configMapKeyRef:
              name: kpc-config
              key: NEO4J_URI
        - name: NEO4J_USERNAME
          valueFrom:
            configMapKeyRef:
              name: kpc-config
              key: NEO4J_USERNAME
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kpc-secrets
              key: NEO4J_PASSWORD
        - name: MILVUS_HOST
          valueFrom:
            configMapKeyRef:
              name: kpc-config
              key: MILVUS_HOST
        - name: MILVUS_PORT
          valueFrom:
            configMapKeyRef:
              name: kpc-config
              key: MILVUS_PORT
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: kpc-config
              key: REDIS_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: kpc-secrets
              key: JWT_SECRET
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: kpc-secrets
              key: OPENAI_API_KEY
        - name: OPENAI_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: kpc-config
              key: OPENAI_BASE_URL
        - name: OPENAI_MODEL
          valueFrom:
            configMapKeyRef:
              name: kpc-config
              key: OPENAI_MODEL
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: kpc-api
  namespace: kpc-system
  labels:
    app: kpc-api
    component: backend
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: kpc-api

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: kpc-api-hpa
  namespace: kpc-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: kpc-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80